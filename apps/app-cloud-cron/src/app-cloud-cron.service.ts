import { Injectable, Logger } from '@nestjs/common'
import { Cron, CronExpression } from '@nestjs/schedule'

@Injectable()
export class CloudCronService {
  private readonly logger = new Logger(CloudCronService.name)

  // –ö–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
  @Cron('* * * * * *')
  handleEverySecond() {
    this.logger.debug('‚ö° Every second cron job executed')
  }

  // –ö–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
  @Cron(CronExpression.EVERY_MINUTE)
  handleEveryMinute() {
    this.logger.log('üïê Every minute cron job executed')

    // –ü—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã —Å –¥–∞–Ω–Ω—ã–º–∏
    const currentTime = new Date().toISOString()
    this.logger.log(`Current time: ${currentTime}`)
  }

  // –ö–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
  @Cron('0 */5 * * * *')
  handleEveryFiveMinutes() {
    this.logger.log('üïê Every 5 minutes cron job executed')

    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–Ω—Å—Ç–∞–Ω—Å–æ–≤
    this.checkInstancesStatus()
  }

  // –ö–∞–∂–¥—ã–π —á–∞—Å
  @Cron(CronExpression.EVERY_HOUR)
  handleEveryHour() {
    this.logger.log('üïê Every hour cron job executed')

    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—á–∏—Å—Ç–∫—É —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    this.cleanupOldData()
  }

  private async checkInstancesStatus() {
    this.logger.log('Checking instances status...')
    // –õ–æ–≥–∏–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –∏–Ω—Å—Ç–∞–Ω—Å–æ–≤
  }

  private async cleanupOldData() {
    this.logger.log('Cleaning up old data...')
    // –õ–æ–≥–∏–∫–∞ –æ—á–∏—Å—Ç–∫–∏ —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö
  }
}