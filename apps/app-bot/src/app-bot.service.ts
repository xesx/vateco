import { Injectable, OnModuleInit } from '@nestjs/common'
import { InjectBot } from 'nestjs-telegraf'

import { Context, Telegraf } from 'telegraf'
import { message } from 'telegraf/filters'

@Injectable()
export class AppBotService implements OnModuleInit {
  constructor(
    @InjectBot() private readonly bot: Telegraf<Context>
  ) {}

  onModuleInit() {
    this.bot.start((ctx) => ctx.reply('üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! –ò—Å–ø–æ–ª—å–∑—É–π /search –¥–ª—è –ø–æ–∏—Å–∫–∞.'))

    this.bot.command('search', async (ctx) => {
      try {
        // const result = await this.vastService.searchOffer({ query: 'gpu' });
        const result = [{a: 1, b: 2}, {c: 3, d: 4}] // –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞
        await ctx.reply(`–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞: ${JSON.stringify(result, null, 2)}`)
      } catch (error) {
        await ctx.reply(`–û—à–∏–±–∫–∞: ${error.message}`)
      }
    })

    this.bot.on(message('text'), (ctx) => {
      ctx.reply(`–í—ã –Ω–∞–ø–∏—Å–∞–ª–∏: "${ctx.message.text}"`)
    })

    console.log('‚úÖ Telegram bot is running (polling mode)')
  }
}